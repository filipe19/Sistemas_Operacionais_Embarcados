1. Considere um MSP430 sendo usado para leituras analógicas. O Raspberry Pi está conectado a ele via I2C, e é o mestre. 
O MSP430 foi programado para funcionar da seguinte forma: O MSP430 recebe o byte 0x55, o que indica o começo de conversão.
100us depois, o MSP430 envia o byte menos significativo e o mais significativo da conversão de 10 bits, nesta ordem.
Escreva o código para o Raspberry Pi executar este protocolo, de forma a obter conversões a cada 10 ms. A cada 1 segundo ele 
deve apresentar no terminal a média das últimas 100 amostras.

#include <stdio.h>
#include <stdlib.h>
#include <linux/i2c-dev.h>
#include <sys/ioctl.h>
#include <unistd.h>
#include <signal.h>
#include <fcntl.h>

#define DLY2 100
#define DLY 10000
#define N 100

int i2c_fd;
void ctrl_c(int sig )
{
	close( i2c_fd);
	exit(-1);
}

int main( void)
{
 int counter = 0 ;
 long int sum = 0 ; 
 unsigned char user_input=1, msp430_ret, slave_addr=0x0F;
	
 signal(SIGINT, ctrl_c) ;
 ioctl(i2c_fd, I2C_SLAVE, slave_addr);
 i2c_fd = open("/dev/i2c-1", O_RDWR) ;

	while(  )
	{
		msp430_ret = 0x55
		usleep(DLY);
		if ( write(i2c_fd, &msp430_ret, 1) == 1) 
		{
			usleep(DLY2) ;
			read(i2c_fd, &msp430_ret, 1);
		     sum += (long int) msp430_ret ;
		       read(i2c_fd, &msp430_ret, 1);
			sum += ((long int ) msp430_ret << 8);

			if (counter == N )
			{
				printf("Média das %d amostras; %ld\n", N, sum/N);
				sum = 0 ;
        counter = 0;
			}
		}
	}
	return 0;

}
